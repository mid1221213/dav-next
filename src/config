ngx_addon_name=dav-next

# nginx has robust builtin support for linking against
# libxml2+libxslt.  This is definitelty the right way to go if
# building nginx with the xslt module, in which case libxslt will
# be linked anyway.  In other cases libxslt is just redundant.
# If that's a big deal, libxml2 can be linked directly:
# ngx_module_libs=-lxml2

ngx_module_type=HTTP
ngx_module_name="dav_next_module"
ngx_module_order="auth_ldap_module dav_next_module"
ngx_module_incs=
ngx_module_deps="$ngx_addon_dir/dav-next/dav-next-module.h \
                 $ngx_addon_dir/dav-next/dav-next-utils.h \
                 $ngx_addon_dir/dav-next/dav-next-fileops.h \
                 $ngx_addon_dir/dav-next/dav-next-webdav.h \
                 $ngx_addon_dir/dav-next/dav-next-handlers.h \
                 $ngx_addon_dir/dav-next/dav-next-locks.h \
                 $ngx_addon_dir/dav-next/dav-next.h"
ngx_module_srcs="$ngx_addon_dir/dav-next/dav-next-utils.c \
                 $ngx_addon_dir/dav-next/dav-next-fileops.c \
                 $ngx_addon_dir/dav-next/dav-next-webdav.c \
                 $ngx_addon_dir/dav-next/dav-next-handlers.c \
                 $ngx_addon_dir/dav-next/dav-next-locks.c \
                 $ngx_addon_dir/dav-next/dav-next-module.c"
ngx_module_libs="LIBXSLT"

. auto/module

test -n "$LDAP" || return
test -s "$ngx_addon_dir/auth-ldap/auth-ldap.c" || return

ngx_module_name="auth_ldap_module"
ngx_module_srcs="$ngx_addon_dir/auth-ldap/auth-ldap.c"
ngx_module_libs="-lldap -llber"

. auto/module
